//
//  描述文件.h
//  EasyIM
//
//  Created by step_zhang on 2019/11/26.
//  Copyright © 2019 Looker. All rights reserved.
//

/**
 MVVM  + RAC +BaseView,VC,Bav,Model,ViewModel
 socket 链接 需要IP  地址  和端口号,就可以进行链接啦
 代理方法
   连接失败，这里可以实现掉线自动重连，要注意以下几点;
     1.判断当前网络环境，如果断网了就不要连了，等待网络到来，在发起重连;
     2.判断调用层是否需要连接，例如用户都没在聊天界面，连接上去浪费流量;
     3.连接次数限制，如果连接失败了，重试10次左右就可以了，不然就死循环了。
     或者每隔1，2，4，8，10，10秒重连...f(x) = f(x-1) * 2, (x=5);
 连接成功，登录服务器，还有开启心跳
 
 连接断开，清空socket对象，清空该清空的东西，还有关闭心跳
 收到数据了，注意 message 是 id 类型的，学过C语言的都知道，id 是 (void *)
 void* 就厉害了，二进制数据都可以指着，不详细解释 void* 了
 我这后台约定的 message 是 json 格式数据
 收到数据，就按格式解析吧，然后把数据发给调用层
 
心跳机制就不难了，开个定时器，问下后台要每隔多少秒发送一次心跳请求就好了。然后注意，断网了或者socket断开的时候把心跳关一下，省资源，不然都断网了，还在循环发心跳，浪费CPU和电量
 
2019-12-03
 需要重新配置ViewMOdel 类.因为需要考虑tcp  请求.暂定为 每一次发起tcp请求的时候,先建立连接.发送完数据之后,手动关闭该连接..除非在聊天界面
 聊天界面,,采取长时间连接
 
 socket 连接 过程
  1.预登陆,获取到 ip 和端口号
  2.向tcp 后台 h进行socket 连接 获取到 sectionid ,以后,和socket连接的 比用字段
  3.获取到或者 当我连接成功(ip 和端口号)成功之后,开始定时器,和后台约定时间,间隔内,发送心跳,告诉后天
   这个前端 还在继续等待接收数据
  4.前端主动发送消息,静senddata  的tag  进行标示.区分之后,将不同的消息进行解析,
   5. 如果断网,暂停定时器,程序推出或者用户(按钮,将socket 定时器 等全部断开)
 
 
 
 
 
 */

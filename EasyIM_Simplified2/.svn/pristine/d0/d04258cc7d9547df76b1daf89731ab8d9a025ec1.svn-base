//
//  BaseUINavigationController.m
//  kelipi
//
//  Created by leilei on 2018/7/12.
//  Copyright © 2018年 魏勇城. All rights reserved.
//

#import "BaseUINavigationController.h"

@interface BaseUINavigationController ()<UINavigationControllerDelegate>

@end

@implementation BaseUINavigationController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    // 设置为自己的代理是监听代理方法
    self.delegate = self;
}

#pragma mark - 重写push方法
- (void)pushViewController:(UIViewController *)viewController animated:(BOOL)animated
{
   
    // 解决在push动画过程中激活手势返回会crash的问题
    if ([self respondsToSelector:@selector(interactivePopGestureRecognizer)])
    {
        self.interactivePopGestureRecognizer.enabled = NO;
    }
    
    [super pushViewController:viewController animated:animated];
    
    viewController.edgesForExtendedLayout = UIRectEdgeNone;
    viewController.extendedLayoutIncludesOpaqueBars = NO;
    viewController.modalPresentationCapturesStatusBarAppearance = NO;
}

#pragma mark - UINavigationControllerDelegate
- (void)navigationController:(UINavigationController *)navigationController didShowViewController:(UIViewController *)viewController animated:(BOOL)animated
{
    if ([self respondsToSelector:@selector(interactivePopGestureRecognizer)])
    {
        // 自定义返回按钮后需要清空手势代理
        self.interactivePopGestureRecognizer.delegate = nil;
        if (self.viewControllers.count > 1)
        {
            // 进入二级页面才需要有手势返回
            self.interactivePopGestureRecognizer.enabled = YES;
        }
        else
        {
            // 解决在rootController下手势返回再push下一个页面没有反应
            self.interactivePopGestureRecognizer.enabled = NO;
        }
    }
}

@end

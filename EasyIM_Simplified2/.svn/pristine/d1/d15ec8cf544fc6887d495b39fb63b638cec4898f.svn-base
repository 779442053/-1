//
//  YKNetworking.m
//  hjqinspection
//
//  Created by 源库 on 2017/3/27.
//  Copyright © 2017年 yuanku. All rights reserved.
//

#import "YKNetworking.h"
#import "MMProgressHUD.h"

#if DEBUG == 1 //debug

//#define NSLog(format,...)  NSLog(format,## __VA_ARGS__)
//修改打印方法 iOS10以后真机测试上述方法失效
#define NSLog(FORMAT, ...) fprintf(stderr,"%s:%d\t%s\n",[[[NSString stringWithUTF8String:__FILE__] lastPathComponent] UTF8String], __LINE__, [[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] UTF8String]);

#else    //release

#define NSLog(format,...)

#endif

@implementation RequestParamsModel

@end

@implementation YKNetworking

static YKNetworking *manager;

+ (YKNetworking *)sharedHttpSessionManager {
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        manager = [super manager];
        manager.responseSerializer = [AFHTTPResponseSerializer new];
        manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"application/json",@"text/html",@"text/plain", nil];
        manager.requestSerializer.timeoutInterval = 30.0;
    });
    [manager.requestSerializer setValue:nil forHTTPHeaderField:@"token"];
    return manager;
}

/**
 POST获取网络数据
 
 @param requestParamsModel 请求参数对象
 @param success 成功返回数据
 @param failure 失败返回错误信息
 */
+ (void)POST:(RequestParamsModel *)requestParamsModel
     success:(void (^)(NSURLSessionDataTask * , NSDictionary * ))success
     failure:(void (^)(NSURLSessionDataTask * , NSError * ))failure {
    [self POST:requestParamsModel.URLString token:requestParamsModel.token parameters:requestParamsModel.parameters success:success failure:failure];
}

/**
 POST获取网络数据
 
 @param URLString 基地址
 @param parameters POST参数
 @param success 成功返回数据
 @param failure 失败返回错误信息
 */
+ (void)POST:(NSString *)URLString
  parameters:(id)parameters
     success:(void (^)(NSURLSessionDataTask * , NSDictionary * ))success
     failure:(void (^)(NSURLSessionDataTask * , NSError * ))failure {
    [self POST:URLString token:nil parameters:parameters success:success failure:failure];
}

/**s
 POST获取网络数据
 
 @param URLString 基地址
 @param token 用户令牌
 @param parameters POST参数
 @param success 成功返回数据
 @param failure 失败返回错误信息
 */
+ (void)POST:(NSString *)URLString
       token:(NSString *)token
  parameters:(id)parameters
     success:(void (^)(NSURLSessionDataTask * , NSDictionary * ))success
     failure:(void (^)(NSURLSessionDataTask * , NSError * ))failure {
    NSMutableDictionary *dic = [@{@"Content-Type":@"application/x-www-form-urlencoded;charset=utf-8"} mutableCopy];
    if (token) [dic setValue:token forKey:@"token"];
    [self POST:URLString headers:dic parameters:parameters progress:nil success:success failure:failure];
}

/**
 POST获取网络数据
 
 @param URLString 基地址
 @param headers header参数
 @param parameters POST参数
 @param uploadProgress 进度
 @param success 成功返回数据
 @param failure 失败返回错误信息
 */
+ (void)POST:(NSString *)URLString
     headers:(NSDictionary *)headers
  parameters:(id)parameters
    progress:(void (^)(NSProgress * ))uploadProgress
     success:(void (^)(NSURLSessionDataTask * , NSDictionary * ))success
     failure:(void (^)(NSURLSessionDataTask *, NSError *))failure {
    
    //    //url拼接
    //    NSString *str = [NSString stringWithFormat:@"%@?",URLString];
    //
    //    for (NSString *key in parameters)
    //    {
    //        str = [str stringByAppendingFormat:@"&%@=%@",key,parameters[key]];
    //    }
    //
    //    //打印URL
    //    NSLog(@"RequestURL===========\n%@",str);
    //    str = [str stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
    //    NSLog(@"RequestURL===========\n%@",str);
    
    NSLog(@"URLString : %@", URLString)
    NSLog(@"headers : %@", headers)
    NSLog(@"parameters : %@", parameters)
    AFHTTPSessionManager *manager = [self sharedHttpSessionManager];
    for (NSString *headerKey in headers.allKeys) {
        NSString *value = headers[headerKey];
        [manager.requestSerializer setValue:value forHTTPHeaderField:headerKey];
    }
    
    [manager POST:URLString parameters:parameters progress:^(NSProgress * _Nonnull progress) {
        if (uploadProgress) uploadProgress(progress);
    } success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSMutableDictionary *responseDictionary = [[NSJSONSerialization JSONObjectWithData:responseObject options:kNilOptions error:nil] mutableCopy];
        NSLog(@"URLString : %@", URLString)
        NSLog(@"%@", responseDictionary);
        
        if ([responseDictionary[@"code"] isEqualToNumber:@40103]) responseDictionary[@"message"] = @"用户登录信息过期，请重新登录";
        if ([responseDictionary[@"code"] isEqualToNumber:@40104]) responseDictionary[@"message"] = @"用户在其他设备登录，请重新登录";
        if (success) success(task,responseDictionary);
        if ([responseDictionary[@"code"] isEqualToNumber:@40103] || [responseDictionary[@"code"] isEqualToNumber:@40104]) {
            if ([YKNetworking sharedHttpSessionManager].returnLogBackIn) [YKNetworking sharedHttpSessionManager].returnLogBackIn();
        }
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        NSLog(@"URLString : %@", URLString)
        NSLog(@"%@", error);
        [MMProgressHUD showHUD:@"服务器繁忙"];
        if (failure) failure(task,error);
        NSData *data = error.userInfo[@"com.alamofire.serialization.response.error.data"];
        if (data) {
            NSDictionary *errorDic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:nil];
            NSLog(@"%@", errorDic);
        }
    }];
}

/**
 POST提交json获取网络数据
 
 @param URLString 基地址
 @param parameters json参数
 @param success 成功返回数据
 @param failure 失败返回错误信息
 */
+ (void)JsonPOST:(NSString *)URLString
      parameters:(id)parameters
         success:(void (^)(NSDictionary *responseDictionary))success
         failure:(void (^)(NSError *error))failure {
    
    NSError *error;
    NSData *jsonData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:&error];
    NSString *jsonString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
    
    AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:[NSURLSessionConfiguration defaultSessionConfiguration]];
    
    NSMutableURLRequest *req = [[AFJSONRequestSerializer serializer] requestWithMethod:@"POST" URLString:URLString parameters:nil error:nil];
    req.timeoutInterval= [[[NSUserDefaults standardUserDefaults] valueForKey:@"timeoutInterval"] longValue];
    [req setValue:@"application/json" forHTTPHeaderField:@"Content-Type"];
    [req setValue:@"application/json" forHTTPHeaderField:@"Accept"];
    [req setHTTPBody:[jsonString dataUsingEncoding:NSUTF8StringEncoding]];
    
    [[manager dataTaskWithRequest:req completionHandler:^(NSURLResponse * _Nonnull response, id  _Nullable responseObject, NSError * _Nullable error) {
        
        if (!error) {
            
            NSLog(@"URLString : %@", URLString)
            NSLog(@"%@", responseObject);
            if (success) success(responseObject);
            
        } else {
            
            NSLog(@"URLString : %@", URLString)
            NSLog(@"%@", error);
            [MMProgressHUD showHUD:@"服务器繁忙"];
            if (failure) failure(error);
            NSData *data = error.userInfo[@"com.alamofire.serialization.response.error.data"];
            if (data) {
                NSDictionary *errorDic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:nil];
                NSLog(@"%@", errorDic);
            }
        }
        
    }] resume];
}

/**
 GET获取网络数据
 
 @param URLString 基地址
 @param parameters GET参数
 @param success 成功返回数据
 @param failure 失败返回错误信息
 */
+ (void)GET:(NSString *)URLString
 parameters:(id)parameters
    success:(void (^)(NSURLSessionDataTask *, NSDictionary *))success
    failure:(void (^)(NSURLSessionDataTask *, NSError *))failure {
    
    AFHTTPSessionManager *manager = [self sharedHttpSessionManager];
    [manager GET:URLString parameters:parameters progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *responseDictionary = [NSJSONSerialization JSONObjectWithData:responseObject options:kNilOptions error:nil];
        NSLog(@"%@", responseDictionary);
        if (success) success(task,responseDictionary);
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        NSLog(@"%@", error);
        NSData *data = error.userInfo[@"com.alamofire.serialization.response.error.data"];
        if (data) {
            NSDictionary *errorDic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:nil];
            NSLog(@"%@", errorDic);
        }
        if (failure) failure(task,error);
    }];
}

/**
 POST上传图片
 
 @param imagesArray 图片信息<YKPostImageModel *>
 @param URLString 基地址
 @param parameters POST参数
 @param uploadProgress 进度
 @param success 成功返回数据
 @param failure 失败返回错误信息
 */
+ (void)POSTImages:(NSArray<YKPostImageModel *> *)imagesArray
         URLString:(NSString *)URLString
        parameters:(id)parameters
          progress:(void (^)(NSProgress * _Nonnull))uploadProgress
           success:(void (^)(NSURLSessionDataTask * _Nonnull, NSDictionary * _Nullable))success
           failure:(void (^)(NSURLSessionDataTask * _Nullable, NSError * _Nonnull))failure {
    
    AFHTTPSessionManager *manager = [self sharedHttpSessionManager];
    //接收类型不一致请替换一致text/html或别的
    //    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"application/json",
    //                                                         @"text/html",
    //                                                         @"image/jpeg",
    //                                                         @"image/png",
    //                                                         @"application/octet-stream",
    //                                                         @"text/json",
    //                                                         nil];
    
    [manager POST:URLString parameters:parameters constructingBodyWithBlock:^(id<AFMultipartFormData> _Nonnull formData) {
        
        for (int i = 0; i < imagesArray.count; i++) {
            YKPostImageModel *postImageModel = imagesArray[i];
            NSData *imageData = UIImageJPEGRepresentation(postImageModel.image,0.1);
            
            NSString *fileName = [NSString stringWithFormat:@"%@.jpeg", postImageModel.fileName];
            
            //上传的参数(上传图片，以文件流的格式)
            [formData appendPartWithFileData:imageData
                                        name:postImageModel.fileName
                                    fileName:fileName
                                    mimeType:@"image/jpeg"];
        }
    } progress:^(NSProgress *_Nonnull progress) {
        if (uploadProgress) uploadProgress(progress);
    } success:^(NSURLSessionDataTask *_Nonnull task, id _Nullable responseObject) {
        NSDictionary *responseDictionary = [NSJSONSerialization JSONObjectWithData:responseObject options:kNilOptions error:nil];
        if (success) success(task,responseDictionary);
    } failure:^(NSURLSessionDataTask *_Nullable task, NSError * _Nonnull error) {
        if (failure) failure(task,error);
    }];
}

@end

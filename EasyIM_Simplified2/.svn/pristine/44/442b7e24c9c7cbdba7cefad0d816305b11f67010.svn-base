//
//  MMProfileViewController.m
//  EasyIM
//
//  Created by momo on 2019/5/23.
//  Copyright © 2019年 Looker. All rights reserved.
//

#import "MMProfileViewController.h"
#import "MMTools.h"
#import "MMChatHandler.h"

#import "BaseUIView.h"


static NSString *const identifier = @"cell";

@implementation MMProfileModel


@end

@interface MMProfileViewController ()<UITableViewDelegate,UITableViewDataSource,UIImagePickerControllerDelegate,UINavigationControllerDelegate,UITextFieldDelegate>

@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) UIImagePickerController *imagePicker;
@property (nonatomic, strong) NSString *filePath;

@property (nonatomic, strong) NSMutableArray *profiles;

@property (nonatomic, strong) YKUserInfo *model;

@end

@implementation MMProfileViewController

- (UITableView *)tableView{
    if (!_tableView) {
        _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT) style:UITableViewStylePlain];
        _tableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
        _tableView.showsVerticalScrollIndicator = NO;
        _tableView.showsHorizontalScrollIndicator = NO;
        _tableView.backgroundColor = [UIColor whiteColor];
        _tableView.tableFooterView = [UIView new];
        
        _tableView.delegate = self;
        _tableView.dataSource = self;
        
        [_tableView registerClass:[UITableViewCell class] forCellReuseIdentifier:identifier];
    }
    return _tableView;
}

- (UIImagePickerController *)imagePicker
{
    if (nil == _imagePicker) {
        _imagePicker = [[UIImagePickerController alloc] init];
        _imagePicker.delegate = self;
        _imagePicker.modalPresentationStyle = UIModalPresentationCustom;
        _imagePicker.view.backgroundColor = [UIColor grayColor];
        _imagePicker.navigationBar.titleTextAttributes = @{NSForegroundColorAttributeName : [UIColor blackColor]};
    }
    return _imagePicker;
}

- (NSMutableArray *)profiles
{
    if(!_profiles){
        _profiles = [[NSMutableArray alloc]  initWithCapacity:0];
    }
    return _profiles;
}


- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    //1.创建UI
    [self setupUserInterface];
    
    //2.请求数据
    [self requesetData];
}

#pragma mark - Private

- (void)initWithModel:(YKUserInfo *_Nullable)model
{
    if (!model) {
        model = [YKUserInfoManager userInfo];
    }
    
    NSString *path = [[NSBundle mainBundle] pathForResource:@"profile.plist" ofType:nil];
    self.profiles = [MMProfileModel mj_objectArrayWithKeyValuesArray:[NSArray arrayWithContentsOfFile:path]];
    
    NSArray *contentArr = @[
                            model.photoUrl.checkTextEmpty ? model.photoUrl : @"",
                            model.email.checkTextEmpty ? model.email : @"",
                            model.mobile.checkTextEmpty ? model.mobile : @"",
                            model.telephone.checkTextEmpty ? model.telephone : @"",
                            model.nickName.checkTextEmpty ? model.nickName : model.userName,
                            model.company.checkTextEmpty ? model.company : @"",
                            model.depart.checkTextEmpty ? model.depart : @"",
                            ];
    
    [self.profiles enumerateObjectsUsingBlock:^(id  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
        MMProfileModel *model = obj;
        MMLog(@"%@",obj);
        MMLog(@"%@",contentArr[idx]);
        model.contentStr = contentArr[idx];
        
        [self.profiles replaceObjectAtIndex:idx withObject:model];
    }];
    
    [self.tableView reloadData];
}

- (void)setupUserInterface
{
    self.navgationTitle = @"个人资料";
    [self addBackBtn];
    [self addRightBtnWithTitle:@"保存"];
    [self.view addSubview:self.tableView];
}

#pragma mark - 保存修改
- (void)rightAction
{
    
    [self.view endEditing:YES];
    
    [MMProgressHUD showHUD];
    
    __block  NSString *email,*mobile,*telephone,*nickName,*company,*depart;
    [self.profiles enumerateObjectsUsingBlock:^(id  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
        MMProfileModel *model = obj;
        switch (idx) {
            case 0:
                
                break;
            case 1:
                email = model.contentStr;
                break;
            case 2:
                mobile = model.contentStr;
                break;
            case 3:
                telephone = model.contentStr;
                break;
            case 4:
                nickName = model.contentStr;
                break;
            case 5:
                company = model.contentStr;
                break;
            case 6:
                depart = model.contentStr;
                break;

            default:
                break;
        }
    }];
    
    [MMRequestManager setUserInfoWithUserId:[YKUserInfoManager userInfo].userId
                                      email:email
                                     mobile:mobile
                                  telephone:telephone
                                   nickName:nickName
                                    company:company
                                     depart:depart
                                aCompletion:^(NSDictionary * _Nonnull dic, NSError * _Nonnull error) {
                                    
                                    [MMProgressHUD hideHUD];
                                    
                                    if (!error) {
                                        [MMProgressHUD showHUD:@"修改成功!"];
                                    }else{
                                        
                                        [MMProgressHUD showError:error.localizedDescription];
                                    }
                                    
    }];
    
}

#pragma mark - 请求个人资料数据

- (void)requesetData
{
    WEAKSELF
    [MMRequestManager getUserInfoWithUserId:[YKUserInfoManager userInfo].userId
                                aCompletion:^(YKUserInfo * _Nonnull model, NSError * _Nonnull error) {
                                    if (model) {
                                        [weakSelf initWithModel:model];
                                    }else{
                                        [weakSelf initWithModel:nil];
                                    }
    }];
}

#pragma mark - UITableViewDelegate UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.profiles.count;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    if (!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    
    if (!self.profiles.count) {
        return nil;
    }
    
    MMProfileModel *model = self.profiles[indexPath.row];
    cell.textLabel.text = model.title;
    
    if (indexPath.row == 0) {
        
        UIImageView *headImageView = [[UIImageView alloc] initWithFrame:CGRectMake(SCREEN_WIDTH-65, 13, 50, 50)];
        UIImage *img = K_DEFAULT_USER_PIC;
        
        if (model.contentStr.checkTextEmpty) {
             [headImageView sd_setImageWithURL:[NSURL URLWithString:model.contentStr] placeholderImage:img];
        }
        else{
            headImageView.image = img;
        }
       
        [headImageView.layer setCornerRadius:25];
        [headImageView.layer setMasksToBounds:YES];
        [cell.contentView addSubview:headImageView];
        
    }else{
        
        UITextField *textField = [[UITextField alloc] initWithFrame:CGRectMake(SCREEN_WIDTH-208, 2.5, 200, 40)];
        textField.placeholder = model.placeholder;
        textField.font = [UIFont systemFontOfSize:13];
        textField.text = [model.contentStr stringByRemovingPercentEncoding];
        textField.delegate = (id <UITextFieldDelegate>)self;
        textField.tag = indexPath.row+100;
        textField.textAlignment = NSTextAlignmentRight;
        [cell.contentView addSubview:textField];
        
        if (indexPath.row == 2 || indexPath.row == 3) {
            textField.keyboardType = UIKeyboardTypeNumberPad;
        }else{
            textField.keyboardType = UIKeyboardTypeDefault;
        }
        
    }

    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    if (indexPath.row == 0) {
        return 76.0f;
    }
    
    return 45.0f;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    switch (indexPath.row) {
        case 0:
        {
            __block typeof(self) weakSelf = self;
            [BaseUIView createPhotosAndCameraPickerForMessage:@"图片信息来源"
                                           andAlertController:^(UIAlertController * _Nullable _alertVC) {
                                               [weakSelf presentViewController:_alertVC animated:YES completion:nil];
                                           }
                                    withImagePickerController:^(UIImagePickerController * _Nullable _imgPickerVC) {
                                        _imgPickerVC.delegate = self;
                                        [weakSelf presentViewController:_imgPickerVC animated:YES completion:nil];
                                    }];

        }
            break;
            
        case 1:
//        {
//            MMMUserViewController *mUser = [[MMMUserViewController alloc] init];
//            mUser.changeUserName = ^(NSString *userName){
//                YKUserInfo *info = [YKUserInfoManager userInfo];
//                info.userName = userName;
//                [YKUserInfoManager setUserInfo:info];
//                NSIndexPath *indexPath = [NSIndexPath indexPathForRow:1 inSection:0];
//                [self.tableView reloadRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationAutomatic];
//            };
//
//            [self.navigationController pushViewController:mUser animated:YES];
//        }
            break;
        case 2:
//        {
//            MMThemeViewController *theme = [[MMThemeViewController alloc] init];
//            theme.changeTheme = ^(NSString *theme){
//                YKUserInfo *info = [YKUserInfoManager userInfo];
//                info.userSig = theme;
//                [YKUserInfoManager setUserInfo:info];
//                NSIndexPath *indexPath = [NSIndexPath indexPathForRow:2 inSection:0];
//                [self.tableView reloadRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationAutomatic];
//            };
//
//            [self.navigationController pushViewController:theme animated:YES];
//        }
            break;
        default:
            break;
    }
}

#pragma mark - UIImagePickerControllerDelegate

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
{
    [picker dismissViewControllerAnimated:YES completion:nil];
}

- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *,id> *)info
{
    UIImage *orgImage = info[UIImagePickerControllerOriginalImage];
    [picker dismissViewControllerAnimated:YES completion:nil];
    
    // 图片压缩后再上传服务器
    // 保存路径
    UIImage *simpleImg = [UIImage simpleImage:orgImage];
    self.filePath = [[MMMediaManager sharedManager] saveImage:simpleImg];
    [self sendFileWithFilePath:_filePath];
}

#pragma mark - Private

- (void)sendFileWithFilePath:(NSString *)filePath
{
    [MMProgressHUD showHUD];
    [[MMChatHandler shareInstance] getUrl:filePath completion:^(NSString * _Nonnull url) {
        
        dispatch_async(dispatch_get_main_queue(), ^{
            [MMProgressHUD hideHUD];
        });
        
        [MMFileTool removeFileAtPath:_filePath];//上传文件失败成功都要删除本地文件
        if (![url isEqualToString:@""]) {
            [self  updateUserPhoto:url];
        }else{
            [MMProgressHUD showHUD:@"上传失败"];
        }
    }];
}

- (void)updateUserPhoto:(NSString *)url
{
    
    [MMRequestManager updateUserPhotoWithUserId:[YKUserInfoManager userInfo].userId
                                       photoUrl:url
                                    aCompletion:^(NSDictionary * _Nonnull dic, NSError * _Nonnull error) {
        [MMProgressHUD hideHUD];
        if (!error) {
            if (dic && K_APP_REQUEST_OK(dic[K_APP_REQUEST_CODE])) {
                [MMProgressHUD showHUD:dic[K_APP_REQUEST_MSG]];
                
                YKUserInfo *info = [YKUserInfoManager userInfo];
                info.photoUrl = url;
                [YKUserInfoManager setUserInfo:info];
                
                MMProfileModel *model = self.profiles[0];
                model.contentStr = url;
                
                dispatch_async(dispatch_get_main_queue(), ^{
                    NSIndexPath *indexPath = [NSIndexPath indexPathForRow:0 inSection:0];
                    [self.tableView reloadRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationAutomatic];
                });
            }
        }else{
            [MMProgressHUD showHUD: MMDescriptionForError(error)];
        }
    }];
    
}


#pragma mark - UITextFieldDelegate

- (void)textFieldDidEndEditing:(UITextField *)textField
{
    MMLog(@"%@",textField.text);
    
    if (!textField.text.length) return;
    
    //输入框两边空格去掉
    NSString *str = [textField.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
    
    NSInteger tag = textField.tag -100;

    MMProfileModel *model = self.profiles[tag];
    model.contentStr = str;
    
}

@end
